@model PlayersBay.Services.Data.Models.Feedbacks.FeedbackInputModel
@{
    this.ViewData["Title"] = "Leave feedback";
}

<div class="row">
    <form asp-controller="Feedbacks" asp-action="Create" method="post">
        <div class="col-md-offset-4 col-md-5">
            <h2>Leave Feedback</h2>
            <hr />
            <div class="form-group col-md-offset-1">
                <label asp-for="@Model.FeedbackRating" class="custom-label"></label>
                <div class="row">
                    <div class="col-md-1">
                        <label style="color: red;"><i class="far fa-frown"></i></label>
                        @Html.RadioButtonFor(m => m.FeedbackRating, FeedbackRating.Negative)
                    </div>
                    <div class="col-md-1">
                        <label style="color: orange;"><i class="far fa-meh"></i></label>
                        @Html.RadioButtonFor(m => m.FeedbackRating, FeedbackRating.Neutral)
                    </div>
                    <div class="col-md-1">
                        <label style="color: green;"><i class="far fa-smile"></i></label>
                        @Html.RadioButtonFor(m => m.FeedbackRating, FeedbackRating.Positive)
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label custom-label"></label>
                <textarea asp-for="Content" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <input type="text" hidden="hidden" value="@this.ViewData["offerId"]" name="OfferId" />
            <button type="submit" class="btn btn-primary btn-lg">Leave feedback</button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
